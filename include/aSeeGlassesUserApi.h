/*******************************************************************************/
/*
Copyright (C) 2016 - 2019, Beijing 7invensun Technology Co.Ltd.All rights reserved.
Permission is hereby granted, free of charge, to any person or organization obtaining
a copy of the software and accompanying documentation covered by this license(the "Software")
to use, reproduce, display, distribute, execute, and transmit the Software, and to prepare
derivative works of the Software, and to permit third - parties to whom the Software
is furnished to do so, all subject to the following :
The copyright notices in the Software and this entire statement, including the above
license grant, this restriction and the following disclaimer, must be included in all
copies of the Software, in whole or in part, and all derivative works of the Software,
unless such copies or derivative works are solely in the form of machine - executable
object code generated by a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, TITLE AND NON - INFRINGEMENT.IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE
DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

@author 7invensun
*/
#ifndef _INCLUDE_7INVENSUN_ASEEGLASSES_USER_API_H_
#define _INCLUDE_7INVENSUN_ASEEGLASSES_USER_API_H_

#include "aSeeGlassesUserTypes.h"

#ifndef API_ASEEGLASSES_7INVENSUN
namespace API_ASEEGLASSES_7INVENSUN {

#ifdef __cplusplus
	extern "C" {
#endif

		/*
		@brief: 场景图像回调函数（BGR格式）
		@param: image 图像数据（与opencv mat 格式兼容）
		@param: size 进度百分比
		@param: width 图像宽
		@param: height 图像高
		@param: timestamp 时间戳
		*/
		typedef void (_7INVENSUN_CALL *scene_image_callback)(uint8_t* image, int32_t size, int32_t width, int32_t height, int64_t timestamp);

		/*
		@brief: 眼图像回调函数（GRAY格式）
		@param: flag 眼图标志 1 - 左眼，2 - 右眼 
		@param: image 图像数据（与opencv mat 格式兼容）
		@param: size 进度百分比
		@param: width 图像宽
		@param: height 图像高
		@param: timestamp 时间戳
		*/
		typedef void (_7INVENSUN_CALL *eye_image_callback)(int32_t flag, uint8_t* image, int32_t size, int32_t width, int32_t height, int64_t timestamp);

		/*
		@brief: 眼睛数据回调函数
		@param: eye 结构体成员含义详见头文件定义
		*/
		typedef void (_7INVENSUN_CALL *eye_data_callback)(const _7_EYEDATA* eye);


		_7INVENSUN_API int connect_device(const char* password);

		_7INVENSUN_API int disconnect_device(void);

		/*
		@brief: 初始化
		@param: config_path 配置文件路径
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int init(const char* config_path);

		/*
		@brief: 清理释放
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int release(void);

		/*
		@brief: 设置眼图回调函数
		@param: cb 回调函数指针
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int set_eye_image_callback(eye_image_callback cb);

		/*
		@brief: 设置前置场景图回调函数
		@param: cb 回调函数指针
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int set_sence_image_callback(scene_image_callback cb);

		/*
		@brief: 设置眼睛数据回调函数
		@param: cb 回调函数指针
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int set_eye_data_callback(eye_data_callback cb);

		/*
		@brief: 启动		
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int start(void);

		/*
		@brief: 停止
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int stop(void);

		/*
		@brief: 开始视线追踪
		@param: coe 校准系数
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int start_tracking(const _7_COEFFICIENT* coe);

		/*
		@brief: 停止视线追踪
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int stop_tracking(void);


		/*
		@brief: 单点校准进度回调函数
		@param: index 点位序号
		@param: percent 进度百分比
		*/
		typedef void (_7INVENSUN_CALL *point_process_callback)(int32_t index, int32_t percent);

		/*
		@brief: 单点校准结束回调函数
		@param: index 点位序号
		@param: error 是否成功（0 - 成功，非零 - 失败）
		*/
		typedef void (_7INVENSUN_CALL *point_finish_callback)(int32_t index, int32_t error);

		/*
		@brief: 初始化校准
		@param: points 校准点数（建议使用 1~3点）
		@param: left_process_cb 左眼单点校准进度
		@param: left_finish_cb 左眼单点校准结束状态
		@param: right_process_cb 右眼单点校准进度
		@param: right_finish_cb 右眼单点校准结束状态
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int setup_calibration(int32_t points,
			point_process_callback left_process_cb, point_finish_callback left_finish_cb,
			point_process_callback right_process_cb, point_finish_callback right_finish_cb);

		/*
		@brief: 开始单点校准
		@param: index 校准点序号
		@param: point 校准点坐标（建议使用归一化值）
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int start_calibration_point(int index, const _7_POINT* point);

		/*
		@brief: 取消当前点的校准
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int cancel_calibration_point(void);

		/*
		@brief: 完成校准，并计算系数
		@param: coe 校准系数（输出参数）
		@return: 0 - 成功，非零 - 失败
		*/
		_7INVENSUN_API int complete_calibration(_7_COEFFICIENT* coe);



#ifdef __cplusplus
	}
#endif
}

#endif // !7INVENSUN




#endif//_INCLUDE_7INVENSUN_ASEEGLASSES_USER_API_H_
